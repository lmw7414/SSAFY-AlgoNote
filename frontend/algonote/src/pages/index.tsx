import { useState, useEffect } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import s from './main.module.scss'
import { getRecentSolvedApi, getUserRecordApi } from '@/apis/analysisAxios'
import myInfo from '@/apis/user-infoAxios'
import { SimpleButton } from '@/components/commons/Buttons/Button'
import Radar from '@/components/commons/Main/Radar'
import Wave from '@/components/commons/Main/Wave'
import { getCookie } from '@/utils/cookie'

interface RecordProps {
  noteCnt: number
  notedProblemCnt: number
  solvedProblemCnt: number
}

interface UserInfo {
  memberId: number
  email: string
  nickname: string
  profileImg: string
}

interface Group {
  group: string
  score: number
  lastSolvedDate: string
  problemCount: number
}

const Main = () => {
  const [info, setInfo] = useState<UserInfo | null>(null)
  const [record, setRecord] = useState<RecordProps | null>(null)
  const [recentSolved, setRecentSolved] = useState<Group[]>([])

  const router = useRouter()

  useEffect(() => {
    const accessToken = getCookie('access_token')
    if (!accessToken) {
      router.replace('/landing') // 사용자를 '/landing' 페이지로 리다이렉트합니다.
    }
  }, [router])

  useEffect(() => {
    const fetchData = async () => {
      const userRecord = await getUserRecordApi()
      const userInfo = await myInfo()
      const userRecentSolved = await getRecentSolvedApi()
      setRecord(userRecord)
      setInfo(userInfo.data)
      setRecentSolved(userRecentSolved.groups)
    }
    fetchData()
  }, [])

  return (
    <>
      <Head>
        <title>algonote</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={s.main}>
        <div className={s.header}>
          <div className={s.headerSentence}>
            <p className={s.headerLight}>당신의 알고리즘</p>
            <p className={s.headerBold}>약점 보완</p>
            <p className={s.headerLight}>을 위한</p>
          </div>
          <div className={s.headerSentence}>
            <p className={s.headerLight}>가장 완벽한 알고리즘 오답노트,</p>
            <p className={s.headerBold}>알고노트</p>
          </div>
        </div>
        <div className={s.container}>
          <h2 className={s.title}>내 기록</h2>
          <div className={s.analysis}>
            <div className={s.radarCont}>
              <p className={s.graphTitle}>종합점수</p>
              <div className={s.radarBox}>
                <Radar
                  data={recentSolved.map((item) => item.score)}
                  labels={[
                    '수학',
                    '그래프',
                    '자료구조',
                    '최적화',
                    '구현',
                    '문자열',
                  ]}
                />
              </div>
            </div>
            <div className={s.right}>
              <div className={s.textCont}>
                <a href="./member">{info?.nickname}</a>
                <p>님은 알고노트에 가입한 이후로,</p>
              </div>
              <div className={s.sentenceCont}>
                <div className={s.textCont}>
                  <div className={s.numCont}>
                    <a href="./solvedproblems">{record?.solvedProblemCnt}</a>
                  </div>
                  <p>개의 문제를 풀었어요</p>
                </div>
                <div className={s.textCont}>
                  <div className={s.numCont}>
                    <a href="./mynote">{record?.notedProblemCnt}</a>
                  </div>
                  <p>개의 문제에 대해</p>
                </div>
                <div className={s.textCont}>
                  <div className={s.numCont}>
                    <a href="./mynote">{record?.noteCnt}</a>
                  </div>
                  <p>개의 노트를 작성했어요</p>
                </div>
              </div>
              <SimpleButton
                text="노트 작성하러 가기"
                style={{ fontWeight: '700' }}
                onClick={() => router.push('/solvedproblems')}
              />
            </div>
          </div>
        </div>

        <hr className={s.divide} />

        <div className={s.container}>
          <h2 className={s.title}>취약 알고리즘 공략하기</h2>
          <div className={s.recommendCont}>
            <p className={s.recommendDesc}>
              감이 떨어진 알고리즘 유형 문제를 추천해드려요
            </p>
            <div className={s.waveCont}>
              {recentSolved?.map((group) => (
                <div key={group.group}>
                  <Wave type={group.group} date={group.lastSolvedDate} />
                </div>
              ))}
            </div>
          </div>
          <SimpleButton
            text="추천 문제 보러가기"
            style={{ fontWeight: '700' }}
            onClick={() => router.push('/recommend')}
          />
        </div>
      </main>
    </>
  )
}

export default Main
